#!/usr/bin/env ruby

# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

ONE_LOCATION=ENV["ONE_LOCATION"]

if !ONE_LOCATION
    RUBY_LIB_LOCATION="/usr/lib/one/ruby"
else
    RUBY_LIB_LOCATION=ONE_LOCATION+"/lib/ruby"
end

$: << RUBY_LIB_LOCATION
$: << RUBY_LIB_LOCATION+"/cli"

require 'command_parser'
require 'one_helper/onevm_helper'
require 'one_helper/onesched_helper'


cmd=CommandParser::CmdParser.new(ARGV) do
    usage "`onesched` <command> [<args>] [<options>]"
    version OpenNebulaHelper::ONE_VERSION

    helper = OneSchedHelper.new
    
    ########################################################################
    # Global Options
    ########################################################################
    set :option, CommandParser::OPTIONS
    

    set :format, :vmid, OneVMHelper.to_id_desc do |arg|
      helper.to_id(arg)
    end
    
    set :format, :vmid_list, OneVMHelper.list_to_id_desc do |arg|
          helper.list_to_id(arg)
      end
    
    
    ########################################################################
    # Commands
    ########################################################################  

    set_desc = <<-EOT.unindent
        Set a the CPU share to the amount specified.
    EOT
    
    command :set, set_desc, [:range, :vmid_list] do
      helper.perform_actions(args[0],options,"set") do |vm|
          res = vm.setcpu
      end
    end
end